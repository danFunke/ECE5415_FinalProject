#include "imu.h"
#include "offsetinit.h"

/*** Global variables ***/
const uint32_t FRAME_DURATION = 4000;

/*** Static functions ***/

uint32_t frame_timer;

#define LED_PIN 12

bool blinker = false;
float roll, pitch, yaw_rate;
float time;

void setup(void){
  Serial.begin(115200);
  Serial.print("Beginning Initialization");
  for(int i=0; i<5; i++){
    Serial.print(".");
    delay(250);
  }
  Serial.println(" ");
  pinMode(LED_PIN, OUTPUT); 
  digitalWrite(LED_PIN,1);
  Serial.println("Initializing IMU.");
  imu_init();
  Serial.println("IMU Initialized.");
  Serial.println("Determining angle offsets. The drone better be level!");
  offset_init();
  Serial.print("Angle offsets set. Pitch Offset = ");
  Serial.print(get_pitch_offset());
  Serial.print(" Roll Offset = ");
  Serial.println(get_roll_offset());
  digitalWrite(LED_PIN,0);
  Serial.println("Initialization Complete");
  delay(1000);
}

void loop(){
  pinMode(LED_PIN,blinker);
  time = micros();
  // Update Gyro Values
  imu_update();

  // Read updated values
  roll = imu_get_roll_angle() - get_roll_offset(); 
  pitch = imu_get_pitch_angle() - get_pitch_offset();
  yaw_rate = imu_get_yaw_rate();

  // Printout
  Serial.print("Roll =");
  Serial.print(roll);
  Serial.print(", ");
  Serial.print("Pitch =");
  Serial.print(pitch);
  Serial.print(", ");
  Serial.print("Yaw Rate =");
  Serial.println(yaw_rate);
  
  while(micros() - time < 4000);
  blinker = !blinker;
}